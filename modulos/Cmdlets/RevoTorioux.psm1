<#MIT License

Copyright (c) 2017 Rodolfo Castelo Méndez

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

#
# Generated by: Rodolfo Castelo Méndez
#
# Generated on: 10/31/2017
#>


Cliente	País	Ambiente	Región	Servicio	Agrupación	Recurso	Detalle	Correlativo
TORIOUX	PER	PRO	WUS	ROB	ASP	APP	RRHH	100
TORIOUX	PER	PRO	WUS	ROB	ASP	APP	COSM	100
TORIOUX	PER	PRO	WUS	ROB	ASP	APP	INMO	100
BANBIF	PER	PRO	WUS	ROB	STO	RSG		


Function Format-RevoSyntaxName{
    <#
        .SYNOPSIS
        Permite validar si el Grupo de Recursos proporcionado existe.
        
        .DESCRIPTION
        Permite validar si el Grupo de Recursos proporcionado existe, en caso no existe, procede con su creación en la región especificada.
                
        .EXAMPLE
        Get-RevoResourceGroup -ResourceGroupName 'migrupoderecursos' -Region 'East US' -Deployment

        Validará si el grupo de Recursos indicado existe, de no existirlo, procederá con su creación. El switch Deployment generará mensajes sobre la creación correcta.
        
        .EXAMPLE
        Get-RevoResourceGroup -ResourceGroupName 'migrupoderecursos' -Region 'East US'

        Validará si el grupo de Recursos indicado existe, de no existirlo, procederá con su creación. 
        
        .PARAMETER ResourceGroupName
        Tipo: Requerido
        Nombre del Grupo de Recursos a Utilizar
      
        .PARAMETER Region
        Tipo: Requerido
        Región en la que se crearán los recursos

        .PARAMETER Deployment      
        Tipo: Opcional
        Validador de si se empleará la función para un despliegue o sólo validación.

        .PARAMETER Silent      
        Tipo: Opcional
        Validador de si se retornará algún mensaje de error.
    #>
    [CmdletBinding(DefaultParametersetName='None')] 
    param(
        [Parameter(Mandatory=$True)]
        [ValidateNotNullOrEmpty()]
        [string]
        $DomainName,
        [Parameter(Mandatory=$true)]      
        [switch]
        $Country,
        [Parameter(Mandatory=$false)]      
        [ValidateSet('Production','Staging_(QA)','Developer')]
        [switch]
        $Ambit,
        [Parameter(Mandatory=$True)]
        [ValidateSet('South Central US','North Europe','West Europe','Southeast Asia','Korea Central','Korea South','West US','East US','Japan West','Japan East','East Asia','East US 2','North Central US','Central US','Brazil South','Australia East','Australia Southeast','West India','Central India','South India','Canada Central','Canada East','West Central US','UK West','UK South','West US 2')]
        [string]
        $AzureRegion,
        [Parameter(Mandatory=$false)]      
        [string]
        $Service,
        [Parameter(Mandatory=$false)]      
        [swtich]
        $IsResourceGroup,
        [Parameter(Mandatory=$false)]      
        [swtich]
        $LowerCase

    )
    begin{
        
        
        
        $ErrorActionPreference = "SilentlyContinue"

    }
    process{

        $BEG_INT_RG = Get-AzureRMResourceGroup -Name $ResourceGroupName -ErrorAction SilentlyContinue;

        if(!$BEG_INT_RG -and $Deployment -and !$Silent){
            Write-RevoMessageConsole 'El grupo de recursos proporcionado no existe, se procederá con su creación.' -Type Warning;
            $BEG_INT_RG = New-AzureRmResourceGroup -Name $ResourceGroupName -Location $Region;
            Write-RevoMessageConsole ('El grupo de recursos ' +$ResourceGroupName +' fue creado de forma exitosa.') -Type Confirmation;
            return $BEG_INT_RG
        }
        elseif(!$BEG_INT_RG -and $Deployment -and $Silent){
            $BEG_INT_RG = New-AzureRmResourceGroup -Name $ResourceGroupName -Location $Region;
            return $BEG_INT_RG
        }
        elseif(!$BEG_INT_RG -and !$Silent){
            Write-RevoMessageConsole ('El grupo de recursos ' +$ResourceGroupName +' no existe. Emplee el parámetro -Deployment para proceder con su creación automáticamente.') -Type Confirmation;
            return $null
        }
        elseif(!$BEG_INT_RG -and $Silent){
            return $null
        }

        else{
            if($Deployment){
                Write-RevoMessageConsole ('El grupo de recursos ' +$ResourceGroupName +' existe y se empleará en el proceso de despliegue.') -Type Confirmation;
                return $BEG_INT_RG
            }
            else{
                Write-RevoMessageConsole ('El grupo de recursos ' +$ResourceGroupName +' existe.') -Type Confirmation;
                return $BEG_INT_RG
            }
            
        }

    }
}